# ==================== Basic ====================
snippet async_snippet
abbr (async () => )();
  (async () => {
    ${0:TARGET}
  })();

snippet classMethod
abbr class method
alias method
  ${1:#:methodName} (${2:#:args}) {
    ${0:TARGET}
  }

snippet export_from
abbr export { member } from './path'
  export { ${1:member} } from "${0:TARGET}";

snippet const_{ }_=_property;
abbr const { } = property;
  const { ${1} } = ${0:TARGET};

# ==================== Method ====================
snippet bind
abbr this.[method] = this.[method].bind(this);
  this.${0:method} = this.$0.bind(this);


# ==================== React ====================
snippet class_React
abbr export class extends React.Component
alias class
  import React from 'react';

  export class ${1:className} extends React.Component {
    constructor (props) {
      super(props);
    }

    render () {
      return (
        ${0:TARGET}
      );
    }
  }

snippet functional_React
abbr export const Component = () => {};
alias class
  import React from 'react';

  export const ${1:#:ComponentName} = ({
    ${2:children}
  }) => {
    return (
      ${0:TARGET}
    );
  };

snippet React.Fragment
abbr <React.Fragment/>
  <React.Fragment>
    ${0:TAGET}
  </React.Fragment>

snippet render_React
abbr render () { return ( <Component /> ) }
  render () {
    ${0:TARGET}
  }

snippet componentDidMount
  componentDidMount () {
    ${0:TARGET}
  }

snippet shouldComponentUpdate
  shouldComponentUpdate (nextProps, nextState) {
    ${0:TARGET}
  }

snippet componentDidUpdate
  componentDidUpdate (prevProps, prevState, snapshot) {
    ${0:TARGET}
  }

snippet getDerivedStateFromProps
  static getDerivedStateFromProps (nextProps, prevState) {
    ${0:TARGET}
  }

snippet component_single
abbr <Component />
  <${1:component_name}
    ${0:TARGET:props}
  />

snippet component_nested
abbr <Component />
  <${1:component_name}>
    ${0:TARGET}
  </$1>

snippet commentout_jsx
options indent
  {/*
  ${0:TARGET}
  */}

snippet return_component
  return (
    ${0:TARGET}
  );

# ==================== Redux ====================
snippet reducks_template
  /* -------------------- Constants -------------------- */

  /* -------------------- Actions -------------------- */

  /* -------------------- Initial state -------------------- */
  const initialState = {

  };

  /* -------------------- Reducers -------------------- */

  export const ${0:TARGET} = (state = initialState, action) => {
    switch (action.type) {

      default:
        return state;
    }
  };

# ==================== Extras ====================
snippet separator
abbr /* ----- this is ----- */
  /* -------------------- ${0:TARGET} -------------------- */


snippet doc_function
abbr /* @doc_comment */
  /**
   * ${1:description}
   * @param {${2:string param_type}} ${3:name param_name}
   * @return {${4:type return_type}}
   */

